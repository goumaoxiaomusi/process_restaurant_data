{"ast":null,"code":"var _jsxFileName = \"D:\\\\UT-Second-Year\\\\JustEatTakeAway\\\\web-frontend\\\\front-end\\\\src\\\\pages\\\\landing-page\\\\index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Landing = () => {\n  // The landing page needs:\n  //1. background color: orange one\n  //2. JustEat Picture\n  //3. Search bar(can be copied from the search component)\n\n  //Function:\n  //1. check if the postcode is valid\n  //2. if the postcode is valid then go to the landing page\n  //3. fetch data from backend and display it on the result page\n  //4. when press on search, the page will go to the result page(this can be realized by copying code from result page)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" I am landing page\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n_c = Landing;\nexport default Landing;\nvar _c;\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"names":["Landing","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/UT-Second-Year/JustEatTakeAway/web-frontend/front-end/src/pages/landing-page/index.js"],"sourcesContent":["\r\n\r\nconst Landing = () => {\r\n    // The landing page needs:\r\n    //1. background color: orange one\r\n    //2. JustEat Picture\r\n    //3. Search bar(can be copied from the search component)\r\n\r\n    //Function:\r\n    //1. check if the postcode is valid\r\n    //2. if the postcode is valid then go to the landing page\r\n    //3. fetch data from backend and display it on the result page\r\n    //4. when press on search, the page will go to the result page(this can be realized by copying code from result page)\r\n    return <div> I am landing page</div>\r\n}\r\n\r\nexport default Landing"],"mappings":";;AAEA,MAAMA,OAAO,GAAGA,CAAA,KAAM;EAClB;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA,oBAAOC,OAAA;IAAAC,QAAA,EAAK;EAAkB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AACxC,CAAC;AAAAC,EAAA,GAZKP,OAAO;AAcb,eAAeA,OAAO;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}