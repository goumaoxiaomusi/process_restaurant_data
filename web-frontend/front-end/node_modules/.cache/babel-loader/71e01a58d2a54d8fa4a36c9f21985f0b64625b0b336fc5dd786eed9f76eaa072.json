{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\n\n// Creating a Redux slice for handling restaurant data\nconst restaurantStore = createSlice({\n  name: 'restaurant',\n  initialState: {\n    restaurantList: []\n  },\n  reducers: {\n    // Reducer to update the restaurantList in the state\n    setRestaurantList(state, action) {\n      state.restaurantList = action.payload;\n    }\n  }\n});\n\n// Destructuring to get the action creators from the slice\nconst {\n  setRestaurantList\n} = restaurantStore.actions;\n\n// Async thunk function to fetch restaurant data from the server\nconst getRestaurantList = () => {\n  return async dispatch => {\n    // Making an HTTP GET request to fetch restaurant data from the locally running backend\n    const res = await axios.get('http://localhost:8080/restaurant/RM77EX');\n    dispatch(setRestaurantList(res.data));\n  };\n};\n\n// Exporting the thunk function to be used in components for dispatching\nexport { getRestaurantList };\n\n// Getting the reducer associated with this slice and exporting it\nconst reducer = restaurantStore.reducer;\nexport default reducer;","map":{"version":3,"names":["createSlice","axios","restaurantStore","name","initialState","restaurantList","reducers","setRestaurantList","state","action","payload","actions","getRestaurantList","dispatch","res","get","data","reducer"],"sources":["D:/UT-Second-Year/JustEatTakeAway/web-frontend/front-end/src/store/modules/restaurantStore.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\r\nimport axios from 'axios'\r\n\r\n// Creating a Redux slice for handling restaurant data\r\nconst restaurantStore = createSlice({\r\n        name: 'restaurant',\r\n        initialState:{\r\n            restaurantList: []\r\n        },\r\n        reducers:{\r\n            // Reducer to update the restaurantList in the state\r\n            setRestaurantList(state, action){\r\n                state.restaurantList = action.payload\r\n            }\r\n        }\r\n    }\r\n)\r\n\r\n// Destructuring to get the action creators from the slice\r\nconst {setRestaurantList} =restaurantStore.actions\r\n\r\n// Async thunk function to fetch restaurant data from the server\r\nconst getRestaurantList = () => {\r\n    return async (dispatch)=>{\r\n        // Making an HTTP GET request to fetch restaurant data from the locally running backend\r\n        const res = await axios.get('http://localhost:8080/restaurant/RM77EX')\r\n        dispatch(setRestaurantList(res.data))\r\n    }\r\n}\r\n\r\n// Exporting the thunk function to be used in components for dispatching\r\nexport {getRestaurantList}\r\n\r\n// Getting the reducer associated with this slice and exporting it\r\nconst reducer = restaurantStore.reducer\r\nexport default reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,eAAe,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAC;IACTC,cAAc,EAAE;EACpB,CAAC;EACDC,QAAQ,EAAC;IACL;IACAC,iBAAiBA,CAACC,KAAK,EAAEC,MAAM,EAAC;MAC5BD,KAAK,CAACH,cAAc,GAAGI,MAAM,CAACC,OAAO;IACzC;EACJ;AACJ,CACJ,CAAC;;AAED;AACA,MAAM;EAACH;AAAiB,CAAC,GAAEL,eAAe,CAACS,OAAO;;AAElD;AACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAC5B,OAAO,MAAOC,QAAQ,IAAG;IACrB;IACA,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,yCAAyC,CAAC;IACtEF,QAAQ,CAACN,iBAAiB,CAACO,GAAG,CAACE,IAAI,CAAC,CAAC;EACzC,CAAC;AACL,CAAC;;AAED;AACA,SAAQJ,iBAAiB;;AAEzB;AACA,MAAMK,OAAO,GAAGf,eAAe,CAACe,OAAO;AACvC,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}