{"ast":null,"code":"var _jsxFileName = \"D:\\\\UT-Second-Year\\\\JustEatTakeAway\\\\web-frontend\\\\front-end\\\\src\\\\pages\\\\result-page\\\\index.js\",\n  _s = $RefreshSig$();\nimport Navigator from \"./components/Navigator/nav\";\nimport { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRestaurantList } from \"../../store/modules/restaurantStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  // const dispatch = useDispatch()\n  // useEffect(()=>{\n  //     dispatch(getRestaurantList())\n  // }, [dispatch])\n\n  const restaurantList = useSelector(state => state.restaurant.restaurantList);\n  const cuisineGroup = useMemo(() => {\n    return restaurantList;\n  }, [restaurantList]);\n  console.log();\n  // The result page needs:\n  //1. put in all the elements that I constructed before\n\n  //Function:\n  //1. display only 10 result on one page\n  //2. separate the content into different pages\n  //3. connect the content of one page to its page number\n  //4. display \"there is no restaurants\" if the list is empty\n  //5. same function as the landing page for search bar here\n  //6. click the picture go to the landing page\n  //7. sort the items and render them based on their different attributes\n  return /*#__PURE__*/_jsxDEV(Navigator, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Result, \"Ms99e0XFPsNOkTuRopho0dAAq/I=\", false, function () {\n  return [useSelector];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["Navigator","useEffect","useMemo","useDispatch","useSelector","getRestaurantList","jsxDEV","_jsxDEV","Result","_s","restaurantList","state","restaurant","cuisineGroup","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/UT-Second-Year/JustEatTakeAway/web-frontend/front-end/src/pages/result-page/index.js"],"sourcesContent":["import Navigator from \"./components/Navigator/nav\"\r\nimport { useEffect, useMemo } from \"react\"\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { getRestaurantList } from \"../../store/modules/restaurantStore\"\r\nconst Result = () => {\r\n    // const dispatch = useDispatch()\r\n    // useEffect(()=>{\r\n    //     dispatch(getRestaurantList())\r\n    // }, [dispatch])\r\n\r\n    const restaurantList = useSelector(state => state.restaurant.restaurantList)\r\n    const cuisineGroup = useMemo(()=>{\r\n        return restaurantList\r\n    }, [restaurantList])\r\n    console.log()\r\n    // The result page needs:\r\n    //1. put in all the elements that I constructed before\r\n\r\n    //Function:\r\n    //1. display only 10 result on one page\r\n    //2. separate the content into different pages\r\n    //3. connect the content of one page to its page number\r\n    //4. display \"there is no restaurants\" if the list is empty\r\n    //5. same function as the landing page for search bar here\r\n    //6. click the picture go to the landing page\r\n    //7. sort the items and render them based on their different attributes\r\n    return (\r\n        <Navigator></Navigator>\r\n    )\r\n}\r\n\r\nexport default Result"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,4BAA4B;AAClD,SAASC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC1C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAASC,iBAAiB,QAAQ,qCAAqC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvE,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB;EACA;EACA;EACA;;EAEA,MAAMC,cAAc,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACF,cAAc,CAAC;EAC5E,MAAMG,YAAY,GAAGX,OAAO,CAAC,MAAI;IAC7B,OAAOQ,cAAc;EACzB,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EACpBI,OAAO,CAACC,GAAG,CAAC,CAAC;EACb;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACIR,OAAA,CAACP,SAAS;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;AAE/B,CAAC;AAAAV,EAAA,CAzBKD,MAAM;EAAA,QAMeJ,WAAW;AAAA;AAAAgB,EAAA,GANhCZ,MAAM;AA2BZ,eAAeA,MAAM;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}