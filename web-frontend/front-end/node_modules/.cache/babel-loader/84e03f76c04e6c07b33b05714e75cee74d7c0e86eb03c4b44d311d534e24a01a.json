{"ast":null,"code":"var _jsxFileName = \"D:\\\\UT-Second-Year\\\\JustEatTakeAway\\\\web-frontend\\\\front-end\\\\src\\\\pages\\\\result-page\\\\index.js\",\n  _s = $RefreshSig$();\nimport Navigator from \"./components/Navigator/nav\";\nimport { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRestaurantList } from \"../../store/modules/restaurantStore\";\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getRestaurantList());\n  }, [dispatch]);\n  const restaurantList = useSelector(state => state.restaurant.restaurantList);\n  const cuisineGroup = useMemo(() => {\n    return _.groupBy(restaurantList, item => item.rating.starRating);\n  }, [restaurantList]);\n  console.log(cuisineGroup);\n  // The result page needs:\n  //1. put in all the elements that I constructed before\n\n  //Function:\n  //1. display only 10 result on one page\n  //2. separate the content into different pages\n  //3. connect the content of one page to its page number\n  //4. display \"there is no restaurants\" if the list is empty\n  //5. same function as the landing page for search bar here\n  //6. click the picture go to the landing page\n  //7. sort the items and render them based on their different attributes\n  return /*#__PURE__*/_jsxDEV(Navigator, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Result, \"FzUXkuq0nr0qpDIoMvBkV+aZSsg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["Navigator","useEffect","useMemo","useDispatch","useSelector","getRestaurantList","_","jsxDEV","_jsxDEV","Result","_s","dispatch","restaurantList","state","restaurant","cuisineGroup","groupBy","item","rating","starRating","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/UT-Second-Year/JustEatTakeAway/web-frontend/front-end/src/pages/result-page/index.js"],"sourcesContent":["import Navigator from \"./components/Navigator/nav\"\r\nimport { useEffect, useMemo } from \"react\"\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { getRestaurantList } from \"../../store/modules/restaurantStore\"\r\nimport _ from 'lodash'\r\n\r\nconst Result = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(()=>{\r\n        dispatch(getRestaurantList())\r\n    }, [dispatch])\r\n\r\n    const restaurantList = useSelector(state => state.restaurant.restaurantList)\r\n    const cuisineGroup = useMemo(()=>{\r\n        return _.groupBy(restaurantList, (item) => item.rating.starRating)\r\n    }, [restaurantList])\r\n    console.log(cuisineGroup)\r\n    // The result page needs:\r\n    //1. put in all the elements that I constructed before\r\n\r\n    //Function:\r\n    //1. display only 10 result on one page\r\n    //2. separate the content into different pages\r\n    //3. connect the content of one page to its page number\r\n    //4. display \"there is no restaurants\" if the list is empty\r\n    //5. same function as the landing page for search bar here\r\n    //6. click the picture go to the landing page\r\n    //7. sort the items and render them based on their different attributes\r\n    return (\r\n        <Navigator></Navigator>\r\n    )\r\n}\r\n\r\nexport default Result"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,4BAA4B;AAClD,SAASC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC1C,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,OAAOC,CAAC,MAAM,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9BF,SAAS,CAAC,MAAI;IACVU,QAAQ,CAACN,iBAAiB,CAAC,CAAC,CAAC;EACjC,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;EAEd,MAAMC,cAAc,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,UAAU,CAACF,cAAc,CAAC;EAC5E,MAAMG,YAAY,GAAGb,OAAO,CAAC,MAAI;IAC7B,OAAOI,CAAC,CAACU,OAAO,CAACJ,cAAc,EAAGK,IAAI,IAAKA,IAAI,CAACC,MAAM,CAACC,UAAU,CAAC;EACtE,CAAC,EAAE,CAACP,cAAc,CAAC,CAAC;EACpBQ,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;EACzB;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACIP,OAAA,CAACR,SAAS;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;AAE/B,CAAC;AAAAf,EAAA,CAzBKD,MAAM;EAAA,QACSN,WAAW,EAKLC,WAAW;AAAA;AAAAsB,EAAA,GANhCjB,MAAM;AA2BZ,eAAeA,MAAM;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}