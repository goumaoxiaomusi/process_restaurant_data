{"ast":null,"code":"var _jsxFileName = \"D:\\\\UT-Second-Year\\\\JustEatTakeAway\\\\web-frontend\\\\front-end\\\\src\\\\pages\\\\result-page\\\\index.js\",\n  _s = $RefreshSig$();\nimport Navigator from \"./components/Navigator/nav\";\nimport Search from \"./components/Search/search\";\nimport Item from \"./components/Item/item\";\nimport { useEffect, useState } from \"react\";\nimport { Container, Stack } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { getRestaurantList } from \"../../store/modules/restaurantStore\";\nimport { Outlet } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = () => {\n  _s();\n  const dispatch = useDispatch();\n  const restaurantList = dispatch;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const ITEMS_PER_PAGE = 10;\n  useEffect(() => {\n    dispatch(getRestaurantList());\n  }, [dispatch]);\n  useEffect(() => {\n    if (restaurantList.length > 0) {\n      setTotalPages(Math.ceil(restaurantList.length / ITEMS_PER_PAGE));\n    }\n  }, [restaurantList]);\n  const currentPageData = restaurantList.slice((currentPage - 1) * ITEMS_PER_PAGE, currentPage * ITEMS_PER_PAGE);\n\n  // const changePage = (newPage) => {\n  //     if (newPage > 0 && newPage <= totalPages) {\n  //       setCurrentPage(newPage);\n  //     }\n  // };\n\n  const firstHalf = currentPageData.slice(0, 5);\n  const secondHalf = currentPageData.slice(5, 10);\n\n  // The result page needs:\n  //1. put in all the elements that I constructed before\n\n  //Function:\n  //2. separate the content into different pages\n  //3. connect the content of one page to its page number\n  //4. display \"there is no restaurants\" if the list is empty\n  //5. same function as the landing page for search bar here\n  //6. click the picture go to the landing page\n  //7. sort the items and render them based on their different attributes\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-page\",\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Navigator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"horizontal\",\n      gap: 3,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          firstPart: firstHalf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          secondPart: secondHalf\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Result, \"c/HBAAjVrrrMx8lMycOwIedU9ks=\", false, function () {\n  return [useDispatch];\n});\n_c = Result;\nexport default Result;\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["Navigator","Search","Item","useEffect","useState","Container","Stack","useDispatch","getRestaurantList","Outlet","jsxDEV","_jsxDEV","Result","_s","dispatch","restaurantList","currentPage","setCurrentPage","totalPages","setTotalPages","ITEMS_PER_PAGE","length","Math","ceil","currentPageData","slice","firstHalf","secondHalf","className","children","fileName","_jsxFileName","lineNumber","columnNumber","direction","gap","firstPart","secondPart","_c","$RefreshReg$"],"sources":["D:/UT-Second-Year/JustEatTakeAway/web-frontend/front-end/src/pages/result-page/index.js"],"sourcesContent":["import Navigator from \"./components/Navigator/nav\"\r\nimport Search from \"./components/Search/search\"\r\nimport Item from \"./components/Item/item\"\r\nimport { useEffect,useState} from \"react\"\r\nimport {Container, Stack} from 'react-bootstrap'\r\nimport {useDispatch} from 'react-redux'\r\nimport { getRestaurantList } from \"../../store/modules/restaurantStore\"\r\nimport { Outlet } from \"react-router-dom\"\r\n\r\n\r\nconst Result = () => {\r\n    const dispatch = useDispatch()\r\n    const restaurantList = dispatch\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const ITEMS_PER_PAGE = 10\r\n\r\n    useEffect(()=>{\r\n        dispatch(getRestaurantList())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (restaurantList.length > 0) {\r\n          setTotalPages(Math.ceil(restaurantList.length / ITEMS_PER_PAGE));\r\n        }\r\n      }, [restaurantList]);\r\n\r\n    const currentPageData = restaurantList.slice(\r\n        (currentPage - 1) * ITEMS_PER_PAGE,\r\n        currentPage * ITEMS_PER_PAGE\r\n    );\r\n    \r\n    // const changePage = (newPage) => {\r\n    //     if (newPage > 0 && newPage <= totalPages) {\r\n    //       setCurrentPage(newPage);\r\n    //     }\r\n    // };\r\n\r\n    const firstHalf = currentPageData.slice(0, 5);\r\n    const secondHalf = currentPageData.slice(5, 10);\r\n  \r\n    \r\n\r\n\r\n    // The result page needs:\r\n    //1. put in all the elements that I constructed before\r\n\r\n    //Function:\r\n    //2. separate the content into different pages\r\n    //3. connect the content of one page to its page number\r\n    //4. display \"there is no restaurants\" if the list is empty\r\n    //5. same function as the landing page for search bar here\r\n    //6. click the picture go to the landing page\r\n    //7. sort the items and render them based on their different attributes\r\n    return (\r\n        <div className=\"result-page\">\r\n            <Container>\r\n                <Outlet /> \r\n            </Container>\r\n            \r\n            <Navigator></Navigator>\r\n\r\n            <Search />\r\n\r\n            <Stack direction=\"horizontal\" gap={3}>\r\n                {/* This maps through the first 5 elements */}\r\n                <Stack>\r\n                    <Item firstPart = {firstHalf}></Item>\r\n                </Stack>\r\n                {/* This maps through the next 5 elements */}\r\n                <Stack>\r\n                    <Item secondPart = {secondHalf}></Item>\r\n                </Stack>\r\n            </Stack>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Result"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}